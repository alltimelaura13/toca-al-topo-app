{"ast":null,"code":"import { BehaviorSubject, concatMap, map, tap, timer } from 'rxjs';\nfunction randomTime(min, max) {\n  return Math.round(Math.random() * (max - min) + min);\n}\nfunction randomHole(holes, lastHole) {\n  const idx = Math.floor(Math.random() * holes.length);\n  if (idx === lastHole) {\n    return randomHole(holes, lastHole);\n  }\n  return idx;\n}\nexport function salto(holes, minUpTime, maxUpTime) {\n  return function (source) {\n    return source.pipe(map(lastHole => ({\n      upTime: randomTime(minUpTime, maxUpTime),\n      holeIdx: randomHole(holes, lastHole)\n    })), concatMap(({\n      upTime,\n      holeIdx\n    }) => {\n      if (source instanceof BehaviorSubject) {\n        source.next(holeIdx);\n      }\n      const hole = holes[holeIdx].nativeElement;\n      hole.classList.add('up');\n      return timer(upTime).pipe(tap(() => hole.classList.remove('up')));\n    }));\n  };\n}","map":{"version":3,"names":["BehaviorSubject","concatMap","map","tap","timer","randomTime","min","max","Math","round","random","randomHole","holes","lastHole","idx","floor","length","salto","minUpTime","maxUpTime","source","pipe","upTime","holeIdx","next","hole","nativeElement","classList","add","remove"],"sources":["C:\\Users\\lamarcos\\Proyectos\\topo-app\\src\\app\\game\\custom-operators\\salto.operator.ts"],"sourcesContent":["import { ElementRef } from '@angular/core';\nimport { BehaviorSubject, Observable, concatMap, map, tap, timer } from 'rxjs';\n\nfunction randomTime(min: number, max: number): number {\n  return Math.round(Math.random() * (max - min) + min);\n}\n\nfunction randomHole(holes: ElementRef<HTMLDivElement>[], lastHole: number): number {\n  const idx = Math.floor(Math.random() * holes.length);\n\n  if (idx === lastHole) {\n    return randomHole(holes, lastHole);\n  }\n\n  return idx;\n}\n\nexport function salto<T extends number>(holes: ElementRef<HTMLDivElement>[], minUpTime: number, maxUpTime: number) {\n  return function (source: Observable<T>): Observable<number> {\n    return source.pipe(\n      map((lastHole) => ({\n        upTime: randomTime(minUpTime, maxUpTime),\n        holeIdx: randomHole(holes, lastHole),\n      })),\n      concatMap(({ upTime, holeIdx }) => {\n        if (source instanceof BehaviorSubject) {\n          source.next(holeIdx);\n        }\n        const hole = holes[holeIdx].nativeElement;\n        hole.classList.add('up');\n        return timer(upTime).pipe(tap(() => hole.classList.remove('up')));\n      }),\n    );\n  };\n}\n"],"mappings":"AACA,SAASA,eAAe,EAAcC,SAAS,EAAEC,GAAG,EAAEC,GAAG,EAAEC,KAAK,QAAQ,MAAM;AAE9E,SAASC,UAAUA,CAACC,GAAW,EAAEC,GAAW;EAC1C,OAAOC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,IAAIH,GAAG,GAAGD,GAAG,CAAC,GAAGA,GAAG,CAAC;AACtD;AAEA,SAASK,UAAUA,CAACC,KAAmC,EAAEC,QAAgB;EACvE,MAAMC,GAAG,GAAGN,IAAI,CAACO,KAAK,CAACP,IAAI,CAACE,MAAM,EAAE,GAAGE,KAAK,CAACI,MAAM,CAAC;EAEpD,IAAIF,GAAG,KAAKD,QAAQ,EAAE;IACpB,OAAOF,UAAU,CAACC,KAAK,EAAEC,QAAQ,CAAC;;EAGpC,OAAOC,GAAG;AACZ;AAEA,OAAM,SAAUG,KAAKA,CAAmBL,KAAmC,EAAEM,SAAiB,EAAEC,SAAiB;EAC/G,OAAO,UAAUC,MAAqB;IACpC,OAAOA,MAAM,CAACC,IAAI,CAChBnB,GAAG,CAAEW,QAAQ,KAAM;MACjBS,MAAM,EAAEjB,UAAU,CAACa,SAAS,EAAEC,SAAS,CAAC;MACxCI,OAAO,EAAEZ,UAAU,CAACC,KAAK,EAAEC,QAAQ;KACpC,CAAC,CAAC,EACHZ,SAAS,CAAC,CAAC;MAAEqB,MAAM;MAAEC;IAAO,CAAE,KAAI;MAChC,IAAIH,MAAM,YAAYpB,eAAe,EAAE;QACrCoB,MAAM,CAACI,IAAI,CAACD,OAAO,CAAC;;MAEtB,MAAME,IAAI,GAAGb,KAAK,CAACW,OAAO,CAAC,CAACG,aAAa;MACzCD,IAAI,CAACE,SAAS,CAACC,GAAG,CAAC,IAAI,CAAC;MACxB,OAAOxB,KAAK,CAACkB,MAAM,CAAC,CAACD,IAAI,CAAClB,GAAG,CAAC,MAAMsB,IAAI,CAACE,SAAS,CAACE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;IACnE,CAAC,CAAC,CACH;EACH,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}